// GENERATED FILE. PLEASE DO NOT EDIT THIS FILE!!

import 'package:routefly/routefly.dart';

import 'app/(modules)/configs/pages/configs_page.dart' as a2;
import 'app/(modules)/devices/ui/pages/device_configuration_page.dart' as a6;
import 'app/(modules)/devices/ui/pages/device_info_page.dart' as a5;
import 'app/(modules)/home/pages/device_demo_page.dart' as a0;
import 'app/(modules)/scanner/ui/pages/scanner_page.dart' as a4;
import 'app/(modules)/startup/pages/startup_page.dart' as a3;
import 'app/(modules)/udp/ui/pages/udp_page.dart' as a1;

List<RouteEntity> get routes => [
      RouteEntity(
        key: '/home/pages/device_demo',
        uri: Uri.parse('/home/pages/device_demo'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a0.DeviceDemoPage(),
        ),
      ),
      RouteEntity(
        key: '/udp/ui/pages/udp',
        uri: Uri.parse('/udp/ui/pages/udp'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a1.UdpPage(),
        ),
      ),
      RouteEntity(
        key: '/configs/pages/configs',
        uri: Uri.parse('/configs/pages/configs'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a2.ConfigsPage(),
        ),
      ),
      RouteEntity(
        key: '/startup/pages/startup',
        uri: Uri.parse('/startup/pages/startup'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a3.StartupPage(),
        ),
      ),
      RouteEntity(
        key: '/scanner/ui/pages/scanner',
        uri: Uri.parse('/scanner/ui/pages/scanner'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a4.ScannerPage(),
        ),
      ),
      RouteEntity(
        key: '/devices/ui/pages/device_info',
        uri: Uri.parse('/devices/ui/pages/device_info'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a5.DeviceInfoPage(),
        ),
      ),
      RouteEntity(
        key: '/devices/ui/pages/device_configuration',
        uri: Uri.parse('/devices/ui/pages/device_configuration'),
        routeBuilder: (ctx, settings) => Routefly.defaultRouteBuilder(
          ctx,
          settings,
          const a6.DeviceConfigurationPage(),
        ),
      ),
    ];

const routePaths = (
  path: '/',
  home: (
    path: '/home',
    pages: (
      path: '/home/pages',
      deviceDemo: '/home/pages/device_demo',
    ),
  ),
  udp: (
    path: '/udp',
    ui: (
      path: '/udp/ui',
      pages: (
        path: '/udp/ui/pages',
        udp: '/udp/ui/pages/udp',
      ),
    ),
  ),
  configs: (
    path: '/configs',
    pages: (
      path: '/configs/pages',
      configs: '/configs/pages/configs',
    ),
  ),
  startup: (
    path: '/startup',
    pages: (
      path: '/startup/pages',
      startup: '/startup/pages/startup',
    ),
  ),
  scanner: (
    path: '/scanner',
    ui: (
      path: '/scanner/ui',
      pages: (
        path: '/scanner/ui/pages',
        scanner: '/scanner/ui/pages/scanner',
      ),
    ),
  ),
  devices: (
    path: '/devices',
    ui: (
      path: '/devices/ui',
      pages: (
        path: '/devices/ui/pages',
        deviceInfo: '/devices/ui/pages/device_info',
        deviceConfiguration: '/devices/ui/pages/device_configuration',
      ),
    ),
  ),
);
